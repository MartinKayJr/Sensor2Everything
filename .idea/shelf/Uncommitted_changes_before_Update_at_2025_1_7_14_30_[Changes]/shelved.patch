Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    alias(libs.plugins.kotlin.android)\r\n}\r\n\r\nandroid {\r\n    namespace = \"cn.martinkay.cursor2everything\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"cn.martinkay.cursor2everything\"\r\n        minSdk = 24\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_11\r\n        targetCompatibility = JavaVersion.VERSION_11\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"11\"\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.appcompat)\r\n    implementation(libs.material)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision cd94b711090f963baf1eb7b21c330bb9cd154312)
+++ b/app/build.gradle.kts	(date 1736131326407)
@@ -5,7 +5,7 @@
 
 android {
     namespace = "cn.martinkay.cursor2everything"
-    compileSdk = 34
+    compileSdk = 35
 
     defaultConfig {
         applicationId = "cn.martinkay.cursor2everything"
@@ -15,6 +15,17 @@
         versionName = "1.0"
 
         testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
+        externalNativeBuild {
+            cmake {
+                cppFlags += ""
+            }
+        }
+        //noinspection ChromeOsAbiSupport
+        ndk.abiFilters += arrayOf("arm64-v8a", "armeabi-v7a")
+    }
+
+    packaging {
+        pickFirsts += arrayOf("**/libbytehook.so")
     }
 
     buildTypes {
@@ -26,6 +37,9 @@
             )
         }
     }
+    buildFeatures {
+        prefab = true
+    }
     compileOptions {
         sourceCompatibility = JavaVersion.VERSION_11
         targetCompatibility = JavaVersion.VERSION_11
@@ -33,6 +47,12 @@
     kotlinOptions {
         jvmTarget = "11"
     }
+    externalNativeBuild {
+        cmake {
+            path = file("src/main/cpp/CMakeLists.txt")
+            version = "3.22.1"
+        }
+    }
 }
 
 dependencies {
@@ -40,7 +60,13 @@
     implementation(libs.androidx.core.ktx)
     implementation(libs.androidx.appcompat)
     implementation(libs.material)
+    implementation(libs.androidx.activity)
+    implementation(libs.androidx.constraintlayout)
     testImplementation(libs.junit)
     androidTestImplementation(libs.androidx.junit)
     androidTestImplementation(libs.androidx.espresso.core)
+    compileOnly(libs.xposed.api)
+    implementation(libs.ezXHelper)
+    implementation(libs.fastjson)
+    implementation(libs.bytehook)
 }
\ No newline at end of file
Index: app/src/main/java/cn/martinkay/cursor2everything/xposed/hook/ViewHook.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/cn/martinkay/cursor2everything/xposed/hook/ViewHook.kt b/app/src/main/java/cn/martinkay/cursor2everything/xposed/hook/ViewHook.kt
new file mode 100644
--- /dev/null	(date 1735617225679)
+++ b/app/src/main/java/cn/martinkay/cursor2everything/xposed/hook/ViewHook.kt	(date 1735617225679)
@@ -0,0 +1,26 @@
+package cn.martinkay.cursor2everything.xposed.hook
+
+import android.util.Log
+import android.view.MotionEvent
+import com.alibaba.fastjson.JSON
+import com.github.kyuubiran.ezxhelper.HookFactory.`-Static`.createHook
+import com.github.kyuubiran.ezxhelper.finders.MethodFinder
+import de.robv.android.xposed.callbacks.XC_LoadPackage
+
+object ViewHook : BaseHook() {
+    override fun init(lpp: XC_LoadPackage.LoadPackageParam) {
+        MethodFinder.fromClass("android.view.View")
+            .filterByName("onGenericMotionEvent")
+            .filterByParamTypes(MotionEvent::class.java)
+            .first()
+            .createHook {
+                before {
+                    val motionEvent = it.args[0] as MotionEvent
+                    Log.i("Cursor2Everything", JSON.toJSONString(motionEvent))
+                }
+            }
+    }
+
+    override val name: String
+        get() = "ViewHook"
+}
\ No newline at end of file
Index: app/src/main/cpp/Util.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/cpp/Util.h b/app/src/main/cpp/Util.h
new file mode 100644
--- /dev/null	(date 1735960057358)
+++ b/app/src/main/cpp/Util.h	(date 1735960057358)
@@ -0,0 +1,21 @@
+#include <android/log.h>//打印日志的头文件
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#define LOGOPEN 1 //日志开关，1为开，其它为关
+#define LOG_TAG    "[CLOUDWISE-NDK]"
+#if(LOGOPEN == 1)
+#define LOGI(...)  __android_log_print(ANDROID_LOG_INFO, LOG_TAG, __VA_ARGS__)
+#define LOGE(...)  __android_log_print(ANDROID_LOG_ERROR, LOG_TAG, __VA_ARGS__)
+#define LOGD(...)  __android_log_print(ANDROID_LOG_INFO, LOG_TAG, __VA_ARGS__)
+#else
+#define LOGI(...) NULL
+#define LOGE(...) NULL
+#define LOGD(...) NULL
+#endif
+
+#ifdef __cplusplus
+}
+#endif
\ No newline at end of file
Index: app/src/main/assets/xposed_init
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/assets/xposed_init b/app/src/main/assets/xposed_init
new file mode 100644
--- /dev/null	(date 1736217604835)
+++ b/app/src/main/assets/xposed_init	(date 1736217604835)
@@ -0,0 +1,1 @@
+cn.martinkay.cursor2everything.xposed.MainHook
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\" defaultProject=\"true\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision cd94b711090f963baf1eb7b21c330bb9cd154312)
+++ b/.idea/vcs.xml	(date 1735616792872)
@@ -1,4 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="VcsDirectoryMappings" defaultProject="true" />
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
 </project>
\ No newline at end of file
Index: app/src/main/java/cn/martinkay/cursor2everything/xposed/hook/SensorEventCallbackHook.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/cn/martinkay/cursor2everything/xposed/hook/SensorEventCallbackHook.kt b/app/src/main/java/cn/martinkay/cursor2everything/xposed/hook/SensorEventCallbackHook.kt
new file mode 100644
--- /dev/null	(date 1736221476528)
+++ b/app/src/main/java/cn/martinkay/cursor2everything/xposed/hook/SensorEventCallbackHook.kt	(date 1736221476528)
@@ -0,0 +1,27 @@
+package cn.martinkay.cursor2everything.xposed.hook
+
+import android.hardware.SensorEvent
+import android.hardware.SensorEventCallback
+import android.util.Log
+import com.alibaba.fastjson.JSON
+import com.github.kyuubiran.ezxhelper.HookFactory.`-Static`.createHook
+import com.github.kyuubiran.ezxhelper.finders.MethodFinder
+import de.robv.android.xposed.callbacks.XC_LoadPackage
+
+object SensorEventCallbackHook : BaseHook() {
+    override val name: String = "SensorEventCallbackHook"
+
+
+    override fun init(lpp: XC_LoadPackage.LoadPackageParam) {
+        MethodFinder.fromClass("ai.nreal.sensorcalib.BiasUtils$1")
+            .filterByName("onSensorChanged")
+            .filterByParamTypes(SensorEvent::class.java)
+            .first()
+            .createHook {
+                before {
+                    val sensorEvent = it.args[0] as SensorEvent
+                    Log.i("SensorEventCallbackHook->", JSON.toJSONString(sensorEvent))
+                }
+            }
+    }
+}
\ No newline at end of file
Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[versions]\r\nagp = \"8.7.3\"\r\nkotlin = \"1.9.24\"\r\ncoreKtx = \"1.15.0\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nespressoCore = \"3.6.1\"\r\nappcompat = \"1.7.0\"\r\nmaterial = \"1.12.0\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-appcompat = { group = \"androidx.appcompat\", name = \"appcompat\", version.ref = \"appcompat\" }\r\nmaterial = { group = \"com.google.android.material\", name = \"material\", version.ref = \"material\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\nkotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	(revision cd94b711090f963baf1eb7b21c330bb9cd154312)
+++ b/gradle/libs.versions.toml	(date 1736130476988)
@@ -7,6 +7,10 @@
 espressoCore = "3.6.1"
 appcompat = "1.7.0"
 material = "1.12.0"
+xposed-api = "82"
+activity = "1.9.3"
+constraintlayout = "2.2.0"
+
 
 [libraries]
 androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
@@ -15,6 +19,13 @@
 androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
 androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
 material = { group = "com.google.android.material", name = "material", version.ref = "material" }
+xposed-api = { group = "de.robv.android.xposed", name = "api", version.ref = "xposed-api" }
+androidx-activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
+androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
+ezXHelper = { module = "com.github.kyuubiran:EzXHelper", version = "2.2.0" }
+fastjson = { module = "com.alibaba:fastjson", version = "1.1.72.android" }
+
+bytehook = { module = "com.bytedance:bytehook", version = "1.1.0"}
 
 [plugins]
 android-application = { id = "com.android.application", version.ref = "agp" }
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
new file mode 100644
--- /dev/null	(date 1736150149416)
+++ b/app/src/main/res/layout/activity_main.xml	(date 1736150149416)
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    tools:context=".MainActivity">
+
+    <TextView
+        android:id="@+id/textBloardId"
+        android:layout_marginTop="200px"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:hint="默认信息"
+        android:textColor="#F00"
+        android:textSize="25sp" />
+
+    <Button
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:onClick="call_native_function"
+        android:text="执行native方法(测试hook效果)" />
+
+    <Button
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:onClick="dobby_load"
+        android:text="加载dobby hook" />
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/cn/martinkay/cursor2everything/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/cn/martinkay/cursor2everything/MainActivity.kt b/app/src/main/java/cn/martinkay/cursor2everything/MainActivity.kt
new file mode 100644
--- /dev/null	(date 1736221303477)
+++ b/app/src/main/java/cn/martinkay/cursor2everything/MainActivity.kt	(date 1736221303477)
@@ -0,0 +1,45 @@
+package cn.martinkay.cursor2everything
+
+import android.hardware.SensorEventCallback
+import android.hardware.SensorEventListener
+import android.hardware.SensorManager
+import android.os.Bundle
+import android.view.View
+import android.widget.TextView
+import androidx.activity.enableEdgeToEdge
+import androidx.appcompat.app.AppCompatActivity
+import androidx.core.content.getSystemService
+import com.bytedance.android.bytehook.ByteHook
+
+class MainActivity : AppCompatActivity() {
+
+    companion object {
+        init {
+            System.loadLibrary("cursor2everything");
+        }
+    }
+
+    private var showText: TextView? = null
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        enableEdgeToEdge()
+        setContentView(R.layout.activity_main)
+        showText = findViewById(R.id.textBloardId)
+        ByteHook.init();
+        val sensor = this.getSystemService("sensor") as SensorManager
+        sensor.getDefaultSensor(35)
+    }
+
+
+    fun call_native_function(view: View) {
+        val result = call_test_function()
+        showText?.text = result
+    }
+
+    fun dobby_load(view: View) {
+
+    }
+
+    external fun call_test_function(): String?
+}
\ No newline at end of file
Index: app/src/main/java/cn/martinkay/cursor2everything/xposed/hook/f.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/cn/martinkay/cursor2everything/xposed/hook/f.kt b/app/src/main/java/cn/martinkay/cursor2everything/xposed/hook/f.kt
new file mode 100644
--- /dev/null	(date 1736221828247)
+++ b/app/src/main/java/cn/martinkay/cursor2everything/xposed/hook/f.kt	(date 1736221828247)
@@ -0,0 +1,38 @@
+package cn.martinkay.cursor2everything.xposed.hook
+
+import android.app.Activity
+import android.os.Bundle
+import android.view.View.OnClickListener
+import android.widget.Toast
+import com.github.kyuubiran.ezxhelper.HookFactory.`-Static`.createHook
+import com.github.kyuubiran.ezxhelper.ObjectHelper.Companion.objectHelper
+import com.github.kyuubiran.ezxhelper.finders.MethodFinder
+import de.robv.android.xposed.callbacks.XC_LoadPackage
+
+object f : BaseHook() {
+    // SettingActivityHook
+    override val name: String = "f"
+
+    override fun init(lpp: XC_LoadPackage.LoadPackageParam) {
+        MethodFinder.fromClass("ai.nreal.nebula.activity.setting.SettingActivity")
+            .filterByName("onCreate")
+            .filterByParamTypes(Bundle::class.java)
+            .first()
+            .createHook {
+                after {
+                    val hmp = it
+                    val activity = it.thisObject as Activity
+                    it.thisObject.objectHelper().invokeMethodBestMatch(
+                        "addTextView",
+                        null,
+                        "Cursor2Everything已注入",
+                        12,
+                        20,
+                        OnClickListener {
+                            Toast.makeText(activity, "QQ2250635418", Toast.LENGTH_SHORT).show()
+                        })
+                }
+            }
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/cn/martinkay/cursor2everything/xposed/hook/BaseHook.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/cn/martinkay/cursor2everything/xposed/hook/BaseHook.kt b/app/src/main/java/cn/martinkay/cursor2everything/xposed/hook/BaseHook.kt
new file mode 100644
--- /dev/null	(date 1735612948501)
+++ b/app/src/main/java/cn/martinkay/cursor2everything/xposed/hook/BaseHook.kt	(date 1735612948501)
@@ -0,0 +1,9 @@
+package cn.martinkay.cursor2everything.xposed.hook
+
+import de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam
+
+abstract class BaseHook() {
+    abstract fun init(lpp: LoadPackageParam)
+    abstract val name: String
+    var isInit: Boolean = false
+}
\ No newline at end of file
Index: settings.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>pluginManagement {\r\n    repositories {\r\n        google {\r\n            content {\r\n                includeGroupByRegex(\"com\\\\.android.*\")\r\n                includeGroupByRegex(\"com\\\\.google.*\")\r\n                includeGroupByRegex(\"androidx.*\")\r\n            }\r\n        }\r\n        mavenCentral()\r\n        gradlePluginPortal()\r\n    }\r\n}\r\ndependencyResolutionManagement {\r\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\r\n    repositories {\r\n        google()\r\n        mavenCentral()\r\n    }\r\n}\r\n\r\nrootProject.name = \"Cursor2Everything\"\r\ninclude(\":app\")\r\n 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/settings.gradle.kts b/settings.gradle.kts
--- a/settings.gradle.kts	(revision cd94b711090f963baf1eb7b21c330bb9cd154312)
+++ b/settings.gradle.kts	(date 1735607642793)
@@ -1,21 +1,20 @@
 pluginManagement {
     repositories {
-        google {
-            content {
-                includeGroupByRegex("com\\.android.*")
-                includeGroupByRegex("com\\.google.*")
-                includeGroupByRegex("androidx.*")
-            }
-        }
+        google()
         mavenCentral()
         gradlePluginPortal()
     }
 }
+
 dependencyResolutionManagement {
     repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
     repositories {
+        mavenCentral()
+        maven("https://maven.aliyun.com/repository/google")
+        maven("https://maven.aliyun.com/repository/public")
+        maven("https://jitpack.io")
         google()
-        mavenCentral()
+        maven("https://api.xposed.info/")
     }
 }
 
Index: app/src/main/java/cn/martinkay/cursor2everything/xposed/MainHook.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/cn/martinkay/cursor2everything/xposed/MainHook.kt b/app/src/main/java/cn/martinkay/cursor2everything/xposed/MainHook.kt
new file mode 100644
--- /dev/null	(date 1736221901807)
+++ b/app/src/main/java/cn/martinkay/cursor2everything/xposed/MainHook.kt	(date 1736221901807)
@@ -0,0 +1,47 @@
+package cn.martinkay.cursor2everything.xposed
+
+import cn.martinkay.cursor2everything.xposed.hook.BaseHook
+import cn.martinkay.cursor2everything.xposed.hook.InputManagerHook
+import cn.martinkay.cursor2everything.xposed.hook.SensorEventCallbackHook
+import cn.martinkay.cursor2everything.xposed.hook.ViewHook
+import cn.martinkay.cursor2everything.xposed.hook.f
+import com.github.kyuubiran.ezxhelper.EzXHelper
+import com.github.kyuubiran.ezxhelper.Log
+import com.github.kyuubiran.ezxhelper.LogExtensions.logexIfThrow
+import de.robv.android.xposed.IXposedHookLoadPackage
+import de.robv.android.xposed.IXposedHookZygoteInit
+import de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam
+
+private const val PACKAGE_NAME_HOOKED = "com.xreal.evapro.nebula"
+private const val TAG = "Xreal2Everything"
+
+class MainHook : IXposedHookLoadPackage, IXposedHookZygoteInit {
+    override fun handleLoadPackage(lpparam: LoadPackageParam) {
+        if (lpparam.packageName == PACKAGE_NAME_HOOKED) {
+            EzXHelper.initHandleLoadPackage(lpparam)
+            EzXHelper.setLogTag(TAG)
+            EzXHelper.setToastTag(TAG)
+
+            initHooks(
+                lpparam,
+                SensorEventCallbackHook,
+                f
+            )
+        }
+    }
+
+    override fun initZygote(startupParam: IXposedHookZygoteInit.StartupParam) {
+        EzXHelper.initZygote(startupParam)
+    }
+
+    private fun initHooks(lpparam: LoadPackageParam, vararg hooks: BaseHook) {
+        hooks.forEach {
+            runCatching {
+                if (it.isInit) return@forEach
+                it.init(lpparam) // Pass lpparam to init
+                it.isInit = true
+                Log.i("Inited hook: ${it.name}")
+            }.logexIfThrow("Failed init hook: ${it.name}")
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/cn/martinkay/cursor2everything/xposed/hook/InputManagerHook.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/cn/martinkay/cursor2everything/xposed/hook/InputManagerHook.kt b/app/src/main/java/cn/martinkay/cursor2everything/xposed/hook/InputManagerHook.kt
new file mode 100644
--- /dev/null	(date 1735617225673)
+++ b/app/src/main/java/cn/martinkay/cursor2everything/xposed/hook/InputManagerHook.kt	(date 1735617225673)
@@ -0,0 +1,27 @@
+package cn.martinkay.cursor2everything.xposed.hook
+
+import android.util.Log
+import android.view.InputEvent
+import com.alibaba.fastjson.JSON
+import com.github.kyuubiran.ezxhelper.HookFactory.`-Static`.createHook
+import com.github.kyuubiran.ezxhelper.finders.MethodFinder
+import de.robv.android.xposed.callbacks.XC_LoadPackage
+
+object InputManagerHook : BaseHook() {
+    override fun init(lpp: XC_LoadPackage.LoadPackageParam) {
+        MethodFinder.fromClass("android.hardware.input.InputManagerGlobal")
+            .filterByName("injectInputEvent")
+            .filterByParamTypes(InputEvent::class.java, Int::class.java)
+            .first()
+            .createHook {
+                before {
+                    val inputEvent = it.args[0] as InputEvent
+                    val mode = it.args[1] as Int
+                    Log.i("Cursor2Everything", JSON.toJSONString(inputEvent))
+                }
+            }
+    }
+
+    override val name: String
+        get() = "InputManagerHook"
+}
\ No newline at end of file
Index: app/src/main/res/values/arrays.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/arrays.xml b/app/src/main/res/values/arrays.xml
new file mode 100644
--- /dev/null	(date 1734317278691)
+++ b/app/src/main/res/values/arrays.xml	(date 1734317278691)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <!--  生效星期  -->
+    <string-array name="xposed_scope">
+        <item>com.xreal.evapro.nebula</item>
+    </string-array>
+</resources>
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.Cursor2Everything\"\r\n        tools:targetApi=\"31\" />\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision cd94b711090f963baf1eb7b21c330bb9cd154312)
+++ b/app/src/main/AndroidManifest.xml	(date 1735616774084)
@@ -11,6 +11,33 @@
         android:roundIcon="@mipmap/ic_launcher_round"
         android:supportsRtl="true"
         android:theme="@style/Theme.Cursor2Everything"
-        tools:targetApi="31" />
+        tools:targetApi="31">
+        <activity
+            android:name=".MainActivity"
+            android:exported="true"
+            android:theme="@style/Theme.AppCompat" >
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+
+        <meta-data
+            android:name="xposedmodule"
+            android:value="true" />
+        <meta-data
+            android:name="xposeddescription"
+            android:value="Xreal运行在任何机器上" />
+        <meta-data
+            android:name="xposedminversion"
+            android:value="53" />
+        <meta-data
+            android:name="xposedscope"
+            android:resource="@array/xposed_scope"/>
+        <meta-data
+            android:name="xposedsharedprefs"
+            android:value="true"/>
+    </application>
 
 </manifest>
\ No newline at end of file
